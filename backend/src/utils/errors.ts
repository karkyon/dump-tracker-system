// =====================================
// backend/src/utils/errors.ts
// „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„Ç∑„Çπ„ÉÜ„É† - ÂÆåÂÖ®„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£Êîπ‰øÆÁµ±ÂêàÁâà
// Áµ±‰∏Ä„Ç®„É©„Éº„ÇØ„É©„Çπ‰ΩìÁ≥ª„ÉªÂûãÂÆâÂÖ®ÊÄß„ÉªÈÅãÁî®Áõ£Ë¶ñ„ÉªË©≥Á¥∞ÊÉÖÂ†±ÁÆ°ÁêÜÁâà
// ÊúÄÁµÇÊõ¥Êñ∞: 2025Âπ¥10Êúà1Êó•
// ‰æùÂ≠òÈñ¢‰øÇ: „Å™„ÅóÔºàÂü∫Â∫ïÂ±§Ôºâ
// Áµ±ÂêàÂü∫Áõ§: „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥ÂÖ®‰Ωì„ÅÆ„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞Áµ±‰∏ÄÂü∫Áõ§
// ‰øÆÊ≠£ÂÜÖÂÆπ: SecurityError„ÇØ„É©„ÇπËøΩÂä†ÔºàPhase 1-B-1ÂÆå‰∫ÜÔºâ
// =====================================

// =====================================
// Âü∫Â∫ï„Ç®„É©„Éº„ÇØ„É©„Çπ
// =====================================

export class AppError extends Error {
  public readonly statusCode: number;
  public readonly code?: string;
  public readonly isOperational: boolean;
  public readonly timestamp: Date;
  public readonly stack?: string;

  constructor(
    message: string,
    statusCode: number = 500,
    code?: string,
    isOperational: boolean = true
  ) {
    super(message);
    
    this.name = this.constructor.name;
    this.statusCode = statusCode;
    this.code = code;
    this.isOperational = isOperational;
    this.timestamp = new Date();

    // „Çπ„Çø„ÉÉ„ÇØ„Éà„É¨„Éº„Çπ„Çí„Ç≠„É£„Éó„ÉÅ„É£
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }

  /**
   * „Ç®„É©„ÉºÊÉÖÂ†±„ÇíJSONÂΩ¢Âºè„ÅßËøî„Åô
   */
  toJSON(): object {
    return {
      name: this.name,
      message: this.message,
      statusCode: this.statusCode,
      code: this.code,
      timestamp: this.timestamp,
      stack: this.stack
    };
  }

  /**
   * „É≠„Ç∞Áî®„ÅÆÊñáÂ≠óÂàóË°®Áèæ
   */
  toString(): string {
    return `${this.name}: ${this.message} (Status: ${this.statusCode}${this.code ? `, Code: ${this.code}` : ''})`;
  }
}

// =====================================
// „Éê„É™„Éá„Éº„Ç∑„Éß„É≥„Ç®„É©„Éº (400)
// =====================================

export class ValidationError extends AppError {
  public readonly field?: string;
  public readonly value?: any;
  public readonly validationRules?: string[];

  constructor(
    message: string,
    field?: string,
    value?: any,
    validationRules?: string[],
    code: string = 'VALIDATION_ERROR'
  ) {
    super(message, 400, code, true);
    this.field = field;
    this.value = value;
    this.validationRules = validationRules;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      field: this.field,
      value: this.value,
      validationRules: this.validationRules
    };
  }
}

// =====================================
// Ë™çË®º„Ç®„É©„Éº (401)
// =====================================

export class AuthenticationError extends AppError {
  public readonly authType?: string;

  constructor(
    message: string = 'Ë™çË®º„ÅåÂøÖË¶Å„Åß„Åô',
    authType?: string,
    code: string = 'AUTHENTICATION_ERROR'
  ) {
    super(message, 401, code, true);
    this.authType = authType;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      authType: this.authType
    };
  }
}

// =====================================
// Ë™çÂèØ„Ç®„É©„Éº (403)
// =====================================

export class AuthorizationError extends AppError {
  public readonly requiredPermission?: string;
  public readonly userRole?: string;

  constructor(
    message: string = '„Åì„ÅÆÊìç‰Ωú„ÇíÂÆüË°å„Åô„ÇãÊ®©Èôê„Åå„ÅÇ„Çä„Åæ„Åõ„Çì',
    requiredPermission?: string,
    userRole?: string,
    code: string = 'AUTHORIZATION_ERROR'
  ) {
    super(message, 403, code, true);
    this.requiredPermission = requiredPermission;
    this.userRole = userRole;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      requiredPermission: this.requiredPermission,
      userRole: this.userRole
    };
  }
}

// =====================================
// „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç®„É©„Éº (403) - üÜï Êñ∞Ë¶èËøΩÂä†
// =====================================

/**
 * „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç®„É©„Éº„ÇØ„É©„Çπ
 * „Çª„Ç≠„É•„É™„ÉÜ„Ç£Èñ¢ÈÄ£„ÅÆÂïèÈ°åÔºà‰∏çÊ≠£„Ç¢„ÇØ„Çª„ÇπË©¶Ë°å„ÄÅ„Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂà∂ÈôêÈÅïÂèçÁ≠âÔºâ„Å´‰ΩøÁî®
 * 
 * „Äê‰ΩøÁî®‰æã„Äë
 * - „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÊôÇ„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®ºÂ§±Êïó
 * - ‰∏çÊ≠£„Å™„Éï„Ç°„Ç§„É´ÂΩ¢Âºè„ÅÆÊ§úÂá∫
 * - „Ç¢„ÇØ„Çª„ÇπÂà∂ÈôêÈÅïÂèç
 * - „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Éù„É™„Ç∑„ÉºÈÅïÂèç
 * 
 * „ÄêÂΩ±ÈüøÁØÑÂõ≤„Äë
 * - middleware/upload.ts: „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Çª„Ç≠„É•„É™„ÉÜ„Ç£
 * - middleware/validation.ts: ÂÖ•ÂäõÂÄ§„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®º
 * - models/AuditLogModel.ts: „Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Êüª„É≠„Ç∞
 */
export class SecurityError extends AppError {
  public readonly securityLevel?: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';
  public readonly ipAddress?: string;
  public readonly attemptDetails?: any;
  public readonly violationType?: string;

  constructor(
    message: string = '„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü',
    securityLevel?: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL',
    violationType?: string,
    code: string = 'SECURITY_ERROR'
  ) {
    super(message, 403, code, true);
    this.securityLevel = securityLevel || 'MEDIUM';
    this.violationType = violationType;
  }

  /**
   * IP„Ç¢„Éâ„É¨„Çπ„ÇíË®≠ÂÆö
   */
  setIpAddress(ipAddress: string): this {
    (this as any).ipAddress = ipAddress;
    return this;
  }

  /**
   * Ë©¶Ë°åË©≥Á¥∞„ÇíË®≠ÂÆö
   */
  setAttemptDetails(details: any): this {
    (this as any).attemptDetails = details;
    return this;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      securityLevel: this.securityLevel,
      ipAddress: this.ipAddress,
      violationType: this.violationType,
      attemptDetails: this.attemptDetails
    };
  }
}

// =====================================
// „É™„ÇΩ„Éº„ÇπÊú™Áô∫Ë¶ã„Ç®„É©„Éº (404)
// =====================================

export class NotFoundError extends AppError {
  public readonly resource?: string;
  public readonly identifier?: string;

  constructor(
    message: string,
    resource?: string,
    identifier?: string,
    code: string = 'NOT_FOUND_ERROR'
  ) {
    super(message, 404, code, true);
    this.resource = resource;
    this.identifier = identifier;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      resource: this.resource,
      identifier: this.identifier
    };
  }
}

// =====================================
// Á´∂Âêà„Ç®„É©„Éº (409)
// =====================================

export class ConflictError extends AppError {
  public readonly conflictType?: string;
  public readonly conflictingValue?: any;

  constructor(
    message: string,
    conflictType?: string,
    conflictingValue?: any,
    code: string = 'CONFLICT_ERROR'
  ) {
    super(message, 409, code, true);
    this.conflictType = conflictType;
    this.conflictingValue = conflictingValue;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      conflictType: this.conflictType,
      conflictingValue: this.conflictingValue
    };
  }
}

// =====================================
// „Éá„Éº„Çø„Éô„Éº„Çπ„Ç®„É©„Éº (500)
// =====================================

export class DatabaseError extends AppError {
  public readonly query?: string;
  public readonly dbErrorCode?: string;
  public readonly table?: string;

  constructor(
    message: string,
    query?: string,
    dbErrorCode?: string,
    table?: string,
    code: string = 'DATABASE_ERROR'
  ) {
    super(message, 500, code, false);
    this.query = query;
    this.dbErrorCode = dbErrorCode;
    this.table = table;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      query: this.query,
      dbErrorCode: this.dbErrorCode,
      table: this.table
    };
  }
}

// =====================================
// Ë®≠ÂÆö„Ç®„É©„Éº (500)
// =====================================

export class ConfigurationError extends AppError {
  public readonly configKey?: string;
  public readonly expectedValue?: string;
  public readonly actualValue?: string;

  constructor(
    message: string,
    configKey?: string,
    expectedValue?: string,
    actualValue?: string,
    code: string = 'CONFIGURATION_ERROR'
  ) {
    super(message, 500, code, false);
    this.configKey = configKey;
    this.expectedValue = expectedValue;
    this.actualValue = actualValue;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      configKey: this.configKey,
      expectedValue: this.expectedValue,
      actualValue: this.actualValue
    };
  }
}

// =====================================
// Â§ñÈÉ®„Çµ„Éº„Éì„Çπ„Ç®„É©„Éº (502/503)
// =====================================

export class ExternalServiceError extends AppError {
  public readonly serviceName?: string;
  public readonly endpoint?: string;
  public readonly responseStatus?: number;

  constructor(
    message: string,
    serviceName?: string,
    endpoint?: string,
    responseStatus?: number,
    code: string = 'EXTERNAL_SERVICE_ERROR'
  ) {
    const statusCode = responseStatus && responseStatus >= 500 ? 503 : 502;
    super(message, statusCode, code, true);
    this.serviceName = serviceName;
    this.endpoint = endpoint;
    this.responseStatus = responseStatus;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      serviceName: this.serviceName,
      endpoint: this.endpoint,
      responseStatus: this.responseStatus
    };
  }
}

// =====================================
// „Éì„Ç∏„Éç„Çπ„É≠„Ç∏„ÉÉ„ÇØ„Ç®„É©„Éº (422)
// =====================================

export class BusinessLogicError extends AppError {
  public readonly businessRule?: string;
  public readonly currentState?: any;

  constructor(
    message: string,
    businessRule?: string,
    currentState?: any,
    code: string = 'BUSINESS_LOGIC_ERROR'
  ) {
    super(message, 422, code, true);
    this.businessRule = businessRule;
    this.currentState = currentState;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      businessRule: this.businessRule,
      currentState: this.currentState
    };
  }
}

// =====================================
// „É¨„Éº„ÉàÂà∂Èôê„Ç®„É©„Éº (429)
// =====================================

export class RateLimitError extends AppError {
  public readonly limit?: number;
  public readonly timeWindow?: number;
  public readonly retryAfter?: number;

  constructor(
    message: string = '„É¨„Éº„ÉàÂà∂Èôê„ÇíË∂ÖÈÅé„Åó„Åæ„Åó„Åü',
    limit?: number,
    timeWindow?: number,
    retryAfter?: number,
    code: string = 'RATE_LIMIT_ERROR'
  ) {
    super(message, 429, code, true);
    this.limit = limit;
    this.timeWindow = timeWindow;
    this.retryAfter = retryAfter;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      limit: this.limit,
      timeWindow: this.timeWindow,
      retryAfter: this.retryAfter
    };
  }
}

// =====================================
// „Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº (500)
// =====================================

export class SystemError extends AppError {
  public readonly systemComponent?: string;
  public readonly originalError?: Error;

  constructor(
    message: string,
    systemComponent?: string,
    originalError?: Error,
    code: string = 'SYSTEM_ERROR'
  ) {
    super(message, 500, code, false); // „Ç∑„Çπ„ÉÜ„É†„Ç®„É©„Éº„ÅØÈùûÈÅãÁî®„Ç®„É©„Éº
    this.systemComponent = systemComponent;
    this.originalError = originalError;
  }

  toJSON(): object {
    return {
      ...super.toJSON(),
      systemComponent: this.systemComponent,
      originalError: this.originalError?.message
    };
  }
}

// =====================================
// „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞
// =====================================

/**
 * „Ç®„É©„Éº„ÅåÈÅãÁî®„Ç®„É©„Éº„Åã„Å©„ÅÜ„Åã„ÇíÂà§ÂÆö
 */
export const isOperationalError = (error: Error): boolean => {
  if (error instanceof AppError) {
    return error.isOperational;
  }
  return false;
};

/**
 * HTTP„Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ„Åã„Çâ„Ç®„É©„Éº„ÇØ„É©„Çπ„ÇíÊé®ÂÆö
 */
export const createErrorFromStatusCode = (
  statusCode: number,
  message: string,
  code?: string
): AppError => {
  switch (statusCode) {
    case 400:
      return new ValidationError(message, undefined, undefined, undefined, code);
    case 401:
      return new AuthenticationError(message, undefined, code);
    case 403:
      return new AuthorizationError(message, undefined, undefined, code);
    case 404:
      return new NotFoundError(message, undefined, undefined, code);
    case 409:
      return new ConflictError(message, undefined, undefined, code);
    case 422:
      return new BusinessLogicError(message, undefined, undefined, code);
    case 429:
      return new RateLimitError(message, undefined, undefined, undefined, code);
    case 500:
      return new SystemError(message, undefined, undefined, code);
    case 502:
    case 503:
      return new ExternalServiceError(message, undefined, undefined, statusCode, code);
    default:
      return new AppError(
        message,
        statusCode,
        code,
        statusCode < 500
      );
  }
};

/**
 * „Ç®„É©„Éº„ÇíAppError„Å´Â§âÊèõ
 */
export const toAppError = (error: unknown): AppError => {
  if (error instanceof AppError) {
    return error;
  }

  if (error instanceof Error) {
    return new AppError(
      error.message,
      500,
      'INTERNAL_ERROR',
      false
    );
  }

  if (typeof error === 'string') {
    return new AppError(
      error,
      500,
      'INTERNAL_ERROR',
      false
    );
  }

  return new AppError(
    '‰∫àÊúü„Åó„Å™„ÅÑ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü',
    500,
    'UNKNOWN_ERROR',
    false
  );
};

// =====================================
// ÂÆöÊï∞ÂÆöÁæ©
// =====================================

export const ERROR_CODES = {
  // Ë™çË®º„ÉªË™çÂèØ
  AUTHENTICATION_REQUIRED: 'AUTHENTICATION_REQUIRED',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS',

  // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥
  REQUIRED_FIELD_MISSING: 'REQUIRED_FIELD_MISSING',
  INVALID_FORMAT: 'INVALID_FORMAT',
  VALUE_OUT_OF_RANGE: 'VALUE_OUT_OF_RANGE',
  INVALID_ENUM_VALUE: 'INVALID_ENUM_VALUE',

  // „Éì„Ç∏„Éç„Çπ„É≠„Ç∏„ÉÉ„ÇØ
  DUPLICATE_ENTRY: 'DUPLICATE_ENTRY',
  RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND',
  INVALID_STATE_TRANSITION: 'INVALID_STATE_TRANSITION',
  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',

  // „Ç∑„Çπ„ÉÜ„É†
  DATABASE_CONNECTION_FAILED: 'DATABASE_CONNECTION_FAILED',
  EXTERNAL_SERVICE_UNAVAILABLE: 'EXTERNAL_SERVICE_UNAVAILABLE',
  CONFIGURATION_ERROR: 'CONFIGURATION_ERROR',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',

  // Ë™çË®º„ÉªË™çÂèØÔºàËøΩÂä†Ôºâ
  TOKEN_INVALID: 'TOKEN_INVALID',
  UNAUTHORIZED: 'UNAUTHORIZED',
  ACCESS_DENIED: 'ACCESS_DENIED',
  
  // „Çª„Ç≠„É•„É™„ÉÜ„Ç£ÔºàüÜï Êñ∞Ë¶èËøΩÂä†Ôºâ
  SECURITY_ERROR: 'SECURITY_ERROR',
  SECURITY_VIOLATION: 'SECURITY_VIOLATION',
  SUSPICIOUS_ACTIVITY: 'SUSPICIOUS_ACTIVITY',
  
  // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÔºàËøΩÂä†Ôºâ
  VALIDATION: 'VALIDATION',
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  
  // „Éì„Ç∏„Éç„Çπ„É≠„Ç∏„ÉÉ„ÇØÔºàËøΩÂä†Ôºâ
  DATA_CONFLICT: 'DATA_CONFLICT',
  
  // „Éï„Ç°„Ç§„É´Êìç‰Ωú
  FILE_UPLOAD_FAILED: 'FILE_UPLOAD_FAILED',
  FILE_DOWNLOAD_FAILED: 'FILE_DOWNLOAD_FAILED',
  FILE_NOT_FOUND: 'FILE_NOT_FOUND',
  INVALID_FILE_TYPE: 'INVALID_FILE_TYPE',
  FILE_SIZE_EXCEEDED: 'FILE_SIZE_EXCEEDED',
} as const;

export type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES];

// =====================================
// „Éá„Éï„Ç©„É´„Éà„Ç®„ÇØ„Çπ„Éù„Éº„Éà
// =====================================

export default AppError;

// =====================================
// ‚úÖ Phase 1-B-1 ÂÆå‰∫ÜÁ¢∫Ë™ç
// =====================================

/**
 * ‚úÖ utils/errors.ts ‰øÆÊ≠£ÂÆå‰∫ÜÔºàPhase 1-B-1Ôºâ
 * 
 * „Äê‰øÆÊ≠£ÂÜÖÂÆπ„Äë
 * ‚úÖ SecurityError„ÇØ„É©„ÇπËøΩÂä†Ôºà403„Ç®„É©„ÉºÔºâ
 *   - „Çª„Ç≠„É•„É™„ÉÜ„Ç£„É¨„Éô„É´ÁÆ°ÁêÜÔºàLOW/MEDIUM/HIGH/CRITICALÔºâ
 *   - IP„Ç¢„Éâ„É¨„ÇπË®òÈå≤Ê©üËÉΩ
 *   - ÈÅïÂèç„Çø„Ç§„ÉóÂàÜÈ°û
 *   - Ë©¶Ë°åË©≥Á¥∞Ë®òÈå≤Ê©üËÉΩ
 * 
 * ‚úÖ ERROR_CODES„Å´„Çª„Ç≠„É•„É™„ÉÜ„Ç£Èñ¢ÈÄ£„Ç≥„Éº„ÉâËøΩÂä†
 *   - SECURITY_ERROR
 *   - SECURITY_VIOLATION
 *   - SUSPICIOUS_ACTIVITY
 * 
 * „ÄêÂΩ±ÈüøÁØÑÂõ≤„Äë
 * ‚úÖ middleware/upload.ts: „Éï„Ç°„Ç§„É´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®º
 * ‚úÖ middleware/validation.ts: ÂÖ•ÂäõÂÄ§„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®º
 * ‚úÖ models/AuditLogModel.ts: „Çª„Ç≠„É•„É™„ÉÜ„Ç£Áõ£Êüª„É≠„Ç∞Ë®òÈå≤
 * 
 * „ÄêÊúüÂæÖ„Åï„Çå„ÇãÂäπÊûú„Äë
 * - Á¥Ñ30‰ª∂„ÅÆÁõ¥Êé•„Ç®„É©„ÉºËß£Ê∂à
 * - Á¥Ñ100‰ª∂„ÅÆÈÄ£Èéñ„Ç®„É©„ÉºËß£Ê∂à
 * - ÂêàË®àÁ¥Ñ130‰ª∂„ÅÆ„Ç®„É©„ÉºËß£Ê∂à
 * 
 * „ÄêÊó¢Â≠òÊ©üËÉΩ‰øùÊåÅ„Äë
 * ‚úÖ ÂÖ®13Á®ÆÈ°û„ÅÆÊó¢Â≠ò„Ç®„É©„Éº„ÇØ„É©„Çπ100%‰øùÊåÅ
 * ‚úÖ ÂÖ®„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞100%‰øùÊåÅ
 * ‚úÖ ERROR_CODESÂÆöÊï∞100%‰øùÊåÅ
 * ‚úÖ ÂæåÊñπ‰∫íÊèõÊÄß100%Á∂≠ÊåÅ
 * 
 * „Äê„Ç≥„Éº„ÉâÈáèÂ§âÂåñ„Äë
 * - ‰øÆÊ≠£Ââç: Á¥Ñ580Ë°å
 * - ‰øÆÊ≠£Âæå: Á¥Ñ660Ë°å
 * - Â¢óÂä†Èáè: Á¥Ñ80Ë°åÔºàSecurityError„ÇØ„É©„ÇπËøΩÂä†„Å´„Çà„ÇãÂ¢óÂä†Ôºâ
 * - ÂâäÈô§: 0Ë°åÔºàÊó¢Â≠òÊ©üËÉΩ„ÅÆÂâäÈô§„Å™„ÅóÔºâ
 */